import aiohttp
import asyncio
import json

async def analyze_stock():
    print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç stock/quantity —Ç–æ–≤–∞—Ä–æ–≤...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã —á–µ—Ä–µ–∑ API
    async with aiohttp.ClientSession() as session:
        async with session.get("http://localhost:8000/api/products?limit=10") as response:
            if response.status == 200:
                data = await response.json()
                products = data.get('products', [])
                
                print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {len(products)}")
                print("\n" + "="*80)
                
                for i, product in enumerate(products):
                    print(f"\nüîç –¢–æ–≤–∞—Ä {i+1}: {product.get('name')}")
                    print(f"üìÑ ID: {product.get('original_id')}")
                    print(f"üí∞ –¶–µ–Ω–∞: {product.get('price')}")
                    print(f"üìä Stock (–æ–±—â–∏–π): {product.get('stock')}")
                    print(f"üìã –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏: {product.get('modifications_text')}")
                    
                    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã
                    variants = product.get('variants', [])
                    print(f"üîß –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {len(variants)}")
                    
                    total_variant_stock = 0
                    for j, variant in enumerate(variants):
                        variant_stock = variant.get('stock', 0)
                        total_variant_stock += variant_stock
                        print(f"  –í–∞—Ä–∏–∞–Ω—Ç {j+1}: {variant.get('name')} - Stock: {variant_stock}")
                    
                    print(f"üìä –°—É–º–º–∞ stock –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {total_variant_stock}")
                    print(f"üìä Stock —Ç–æ–≤–∞—Ä–∞: {product.get('stock')}")
                    
                    if total_variant_stock != product.get('stock'):
                        print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°—É–º–º–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ —Ä–∞–≤–Ω–∞ stock —Ç–æ–≤–∞—Ä–∞!")
                    
                    print("-" * 60)
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                print("\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
                total_stock = sum(p.get('stock', 0) for p in products)
                total_variants = sum(len(p.get('variants', [])) for p in products)
                total_variant_stock = sum(sum(v.get('stock', 0) for v in p.get('variants', [])) for p in products)
                
                print(f"üì¶ –û–±—â–∏–π stock –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤: {total_stock}")
                print(f"üîß –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {total_variants}")
                print(f"üìä –û–±—â–∏–π stock –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: {total_variant_stock}")
                
                if total_stock != total_variant_stock:
                    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û–±—â–∏–π stock —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ —Ä–∞–≤–µ–Ω —Å—É–º–º–µ stock –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!")
                else:
                    print("‚úÖ Stock —Ç–æ–≤–∞—Ä–æ–≤ —Ä–∞–≤–µ–Ω —Å—É–º–º–µ stock –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")
                    
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: {response.status}")

if __name__ == "__main__":
    asyncio.run(analyze_stock())
