import aiohttp
import asyncio
import json

async def debug_full_products():
    api_token = "70ff03c8f6f33ae7b62744eb0af127b043de02fb"
    base_url = "https://api.moysklad.ru/api/remap/1.2"
    
    headers = {
        'Authorization': f'Bearer {api_token}',
        'Accept': 'application/json;charset=utf-8',
        'Accept-Encoding': 'gzip'
    }
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
    print("üîç –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã...")
    products_url = f"{base_url}/entity/product"
    products_params = {'limit': 2000}
    
    async with aiohttp.ClientSession() as session:
        async with session.get(products_url, headers=headers, params=products_params) as response:
            if response.status == 200:
                products_data = await response.json()
                products = products_data.get('rows', [])
                print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏
                products_with_variants = 0
                total_variants = 0
                
                for product in products:
                    variants_count = product.get('variantsCount', 0)
                    if variants_count > 0:
                        products_with_variants += 1
                        total_variants += variants_count
                
                print(f"üìä –¢–æ–≤–∞—Ä–æ–≤ —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏: {products_with_variants}")
                print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {total_variants}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏
                print("\nüîç –ü–µ—Ä–≤—ã–µ 5 —Ç–æ–≤–∞—Ä–æ–≤ —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏:")
                count = 0
                for product in products:
                    if count >= 5:
                        break
                    variants_count = product.get('variantsCount', 0)
                    if variants_count > 0:
                        print(f"üìÑ {product.get('name')} - {variants_count} –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π")
                        count += 1
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print("\nüîç –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    variants_url = f"{base_url}/entity/variant"
    variants_params = {
        'limit': 2000,
        'expand': 'product.supplier'
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.get(variants_url, headers=headers, params=variants_params) as response:
            if response.status == 200:
                variants_data = await response.json()
                variants = variants_data.get('rows', [])
                print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {len(variants)}")
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
                variants_by_product = {}
                for variant in variants:
                    if variant.get('product') and variant['product'].get('id'):
                        product_id = variant['product']['id']
                        if product_id not in variants_by_product:
                            variants_by_product[product_id] = []
                        variants_by_product[product_id].append(variant)
                
                print(f"üìä –¢–æ–≤–∞—Ä–æ–≤ —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏ (–∏–∑ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π): {len(variants_by_product)}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –≥—Ä—É–ø–ø
                print("\nüîç –ü–µ—Ä–≤—ã–µ 5 –≥—Ä—É–ø–ø –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π:")
                count = 0
                for product_id, product_variants in variants_by_product.items():
                    if count >= 5:
                        break
                    print(f"üìÑ –¢–æ–≤–∞—Ä ID: {product_id}")
                    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {len(product_variants)}")
                    for variant in product_variants[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
                        print(f"  - {variant.get('name')}")
                    count += 1

if __name__ == "__main__":
    asyncio.run(debug_full_products())
