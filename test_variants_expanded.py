import aiohttp
import asyncio
import json

async def test_variants_expanded():
    api_token = "70ff03c8f6f33ae7b62744eb0af127b043de02fb"
    base_url = "https://api.moysklad.ru/api/remap/1.2"
    
    headers = {
        'Authorization': f'Bearer {api_token}',
        'Accept': 'application/json;charset=utf-8',
        'Accept-Encoding': 'gzip'
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    print("üîç –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π...")
    variants_url = f"{base_url}/entity/variant"
    variants_params = {
        'limit': 5,
        'expand': 'product.supplier'
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.get(variants_url, headers=headers, params=variants_params) as response:
            if response.status == 200:
                variants_data = await response.json()
                print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {len(variants_data.get('rows', []))}")
                
                if variants_data.get('rows'):
                    for i, variant in enumerate(variants_data['rows']):
                        print(f"\nüîç –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è {i+1}:")
                        print(f"üìÑ ID: {variant.get('id')}")
                        print(f"üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: {variant.get('name')}")
                        print(f"üìÑ –ê—Ä—Ç–∏–∫—É–ª: {variant.get('article')}")
                        
                        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º —Ç–æ–≤–∞—Ä–µ
                        if variant.get('product'):
                            product_info = variant['product']
                            print(f"üìÑ –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Ç–æ–≤–∞—Ä: {product_info.get('name')}")
                            print(f"üìÑ ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞: {product_info.get('id')}")
                            print(f"üìÑ –ê—Ä—Ç–∏–∫—É–ª —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞: {product_info.get('article')}")
                        else:
                            print("üìÑ –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Ç–æ–≤–∞—Ä: –ù–µ—Ç —Å–≤—è–∑–∏")
                        
                        # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
                        if variant.get('characteristics'):
                            print(f"üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
                            for char in variant['characteristics']:
                                print(f"  - {char.get('name')}: {char.get('value')}")
                        else:
                            print("üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –ù–µ—Ç")
                        
                        # –¶–µ–Ω—ã
                        if variant.get('salePrices'):
                            print(f"üí∞ –¶–µ–Ω—ã:")
                            for price in variant['salePrices']:
                                print(f"  - {price.get('value', 0) / 100} —Ä—É–±.")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {response.status}")
                error_text = await response.text()
                print(f"üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {error_text}")

if __name__ == "__main__":
    asyncio.run(test_variants_expanded())
