import aiohttp
import asyncio
import json

async def test_stock_all():
    api_token = "70ff03c8f6f33ae7b62744eb0af127b043de02fb"
    base_url = "https://api.moysklad.ru/api/remap/1.2"
    
    headers = {
        'Authorization': f'Bearer {api_token}',
        'Accept': 'application/json;charset=utf-8',
        'Accept-Encoding': 'gzip'
    }
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º /report/stock/all...")
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    test_params = [
        {'limit': 1000},
        {'limit': 2000},
        {'limit': 1000, 'offset': 0},
        {'limit': 1000, 'moment': '2024-12-19 00:00:00'},
        {'limit': 1000, 'store': 'all'}
    ]
    
    for i, params in enumerate(test_params):
        print(f"\nüìä –¢–µ—Å—Ç {i+1} —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: {params}")
        
        stock_all_url = f"{base_url}/report/stock/all"
        
        async with aiohttp.ClientSession() as session:
            async with session.get(stock_all_url, headers=headers, params=params) as response:
                if response.status == 200:
                    stock_all_data = await response.json()
                    stock_all_items = stock_all_data.get('rows', [])
                    
                    print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(stock_all_items)}")
                    
                    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π stock
                    total_stock = 0
                    positive_stock = 0
                    zero_stock = 0
                    negative_stock = 0
                    
                    for item in stock_all_items:
                        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—è
                        stock = item.get('quantity', 0)  # –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ
                        if stock == 0:
                            stock = item.get('stock', 0)  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –ø–æ–ª–µ
                        
                        total_stock += stock
                        
                        if stock > 0:
                            positive_stock += stock
                        elif stock == 0:
                            zero_stock += 1
                        else:
                            negative_stock += stock
                    
                    print(f"üìä –û–±—â–∏–π stock: {total_stock}")
                    print(f"‚úÖ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π stock: {positive_stock}")
                    print(f"‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã —Å –Ω—É–ª–µ–≤—ã–º stock: {zero_stock}")
                    print(f"‚ùå –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π stock: {negative_stock}")
                    
                    if total_stock == 896:
                        print(f"üéâ –ù–ê–ô–î–ï–ù–û! –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 896 —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ {params}")
                        break
                    
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {response.status}")
    
    # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    print(f"\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö...")
    stock_all_url = f"{base_url}/report/stock/all"
    
    async with aiohttp.ClientSession() as session:
        async with session.get(stock_all_url, headers=headers, params={'limit': 5}) as response:
            if response.status == 200:
                stock_all_data = await response.json()
                stock_all_items = stock_all_data.get('rows', [])
                
                if stock_all_items:
                    print(f"üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:")
                    first_item = stock_all_items[0]
                    for key, value in first_item.items():
                        print(f"  {key}: {value}")

if __name__ == "__main__":
    asyncio.run(test_stock_all())
