#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ú–æ–π–°–∫–ª–∞–¥
"""

import asyncio
import aiohttp
import requests
from moysklad_api import MoySkladAPI

async def find_specific_product():
    """–ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä API
    api = MoySkladAPI()
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    new_token = api.get_access_token()
    if new_token:
        api.api_token = new_token
        api.headers['Authorization'] = f'Bearer {new_token}'
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –≤ API: {new_token[:20]}...")
    
    # ID —Ç–æ–≤–∞—Ä–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    target_product_id = "c2a22d50-affd-11ef-0a80-197800bf4115"
    
    print(f"üîç –ò—â–µ–º —Ç–æ–≤–∞—Ä: {target_product_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö
    print("üì¶ –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö...")
    
    url = f"{api.base_url}/report/stock/all"
    params = {'limit': 1000, 'offset': 0}
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url, headers=api.headers, params=params) as response:
            if response.status == 200:
                data = await response.json()
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –æ—Ç—á–µ—Ç–∞: {len(data.get('rows', []))}")
                
                # –ò—â–µ–º –Ω–∞—à —Ç–æ–≤–∞—Ä
                found_product = None
                for i, item in enumerate(data.get('rows', [])):
                    product_id = item.get('meta', {}).get('href', '').split('/')[-1].split('?')[0]
                    if product_id == target_product_id:
                        found_product = item
                        print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {i+1}: {item.get('name')}")
                        print(f"üìÑ –û—Å—Ç–∞—Ç–æ–∫: {item.get('stock', 0)}")
                        break
                
                if found_product:
                    print(f"üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: {found_product.get('name')}")
                    print(f"üìÑ –û—Å—Ç–∞—Ç–æ–∫: {found_product.get('stock', 0)}")
                    print(f"üí∞ –¶–µ–Ω–∞: {found_product.get('salePrice', 0)}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—á–µ–º—É —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
                    stock = found_product.get('stock', 0)
                    if stock <= 0:
                        print(f"‚ùå –¢–æ–≤–∞—Ä –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Å–ø–∏—Å–æ–∫ –∏–∑-–∑–∞ –Ω—É–ª–µ–≤–æ–≥–æ –æ—Å—Ç–∞—Ç–∫–∞: {stock}")
                    else:
                        print(f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞–¥–∞—Ç—å –≤ —Å–ø–∏—Å–æ–∫ (–æ—Å—Ç–∞—Ç–æ–∫: {stock})")
                else:
                    print(f"‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç—á–µ—Ç–µ –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö")
                    
                    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞–ø—Ä—è–º—É—é
                    print("üîç –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞–ø—Ä—è–º—É—é...")
                    product_detail = await api._get_product_detail(target_product_id)
                    if product_detail:
                        print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω –Ω–∞–ø—Ä—è–º—É—é: {product_detail.get('name')}")
                        print(f"üìÑ –û—Å—Ç–∞—Ç–æ–∫: {product_detail.get('stock', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
                    else:
                        print(f"‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –Ω–∞–ø—Ä—è–º—É—é")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {response.status}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞")
    asyncio.run(find_specific_product())
