import aiohttp
import asyncio
import json

async def test_variants_api():
    api_token = "70ff03c8f6f33ae7b62744eb0af127b043de02fb"
    base_url = "https://api.moysklad.ru/api/remap/1.2"
    
    headers = {
        'Authorization': f'Bearer {api_token}',
        'Accept': 'application/json;charset=utf-8',
        'Accept-Encoding': 'gzip'
    }
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã (products)
    print("üîç –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã (products)...")
    products_url = f"{base_url}/entity/product"
    products_params = {'limit': 5}
    
    async with aiohttp.ClientSession() as session:
        async with session.get(products_url, headers=headers, params=products_params) as response:
            if response.status == 200:
                products_data = await response.json()
                print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products_data.get('rows', []))}")
                
                if products_data.get('rows'):
                    for i, product in enumerate(products_data['rows'][:3]):
                        print(f"\nüîç –¢–æ–≤–∞—Ä {i+1}:")
                        print(f"üìÑ ID: {product.get('id')}")
                        print(f"üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: {product.get('name')}")
                        print(f"üìÑ –ê—Ä—Ç–∏–∫—É–ª: {product.get('article')}")
                        print(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.get('productFolder', {}).get('name', '–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                        if product.get('variantsCount', 0) > 0:
                            print(f"üîÑ –ï—Å—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏: {product.get('variantsCount')}")
                        else:
                            print("üîÑ –ù–µ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: {response.status}")
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ (variants)
    print("\n\nüîç –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ (variants)...")
    variants_url = f"{base_url}/entity/variant"
    variants_params = {'limit': 5}
    
    async with aiohttp.ClientSession() as session:
        async with session.get(variants_url, headers=headers, params=variants_params) as response:
            if response.status == 200:
                variants_data = await response.json()
                print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {len(variants_data.get('rows', []))}")
                
                if variants_data.get('rows'):
                    for i, variant in enumerate(variants_data['rows'][:3]):
                        print(f"\nüîç –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è {i+1}:")
                        print(f"üìÑ ID: {variant.get('id')}")
                        print(f"üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: {variant.get('name')}")
                        print(f"üìÑ –ê—Ä—Ç–∏–∫—É–ª: {variant.get('article')}")
                        
                        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º —Ç–æ–≤–∞—Ä–µ
                        if variant.get('product'):
                            product_info = variant['product']
                            print(f"üìÑ –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Ç–æ–≤–∞—Ä: {product_info.get('name')}")
                            print(f"üìÑ ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞: {product_info.get('id')}")
                        
                        # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
                        if variant.get('characteristics'):
                            print(f"üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
                            for char in variant['characteristics']:
                                print(f"  - {char.get('name')}: {char.get('value')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {response.status}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
    print("\n\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é...")
    specific_variant_url = f"{base_url}/entity/variant/5e37fde4-7d98-11f0-0a80-0f06003af77f?expand=product.supplier"
    
    async with aiohttp.ClientSession() as session:
        async with session.get(specific_variant_url, headers=headers) as response:
            if response.status == 200:
                variant_data = await response.json()
                print(f"üìÑ –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è: {variant_data.get('name')}")
                print(f"üìÑ ID: {variant_data.get('id')}")
                
                if variant_data.get('product'):
                    product_info = variant_data['product']
                    print(f"üìÑ –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Ç–æ–≤–∞—Ä: {product_info.get('name')}")
                    print(f"üìÑ ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞: {product_info.get('id')}")
                
                if variant_data.get('characteristics'):
                    print(f"üîß –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
                    for char in variant_data['characteristics']:
                        print(f"  - {char.get('name')}: {char.get('value')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.status}")

if __name__ == "__main__":
    asyncio.run(test_variants_api())
