// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentUserId = 'demo_user';
let cartItems = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    initTelegramWebApp();
    initLocalCart();
    updateCartCount();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initTelegramWebApp() {
    if (window.Telegram && window.Telegram.WebApp) {
        const tg = window.Telegram.WebApp;
        
        // –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        tg.ready();
        tg.expand();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (tg.initDataUnsafe && tg.initDataUnsafe.user) {
            currentUserId = tg.initDataUnsafe.user.id;
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–µ–º—É
        document.documentElement.style.setProperty('--tg-theme-bg-color', tg.themeParams.bg_color || '#ffffff');
        document.documentElement.style.setProperty('--tg-theme-text-color', tg.themeParams.text_color || '#000000');
        document.documentElement.style.setProperty('--tg-theme-hint-color', tg.themeParams.hint_color || '#999999');
        document.documentElement.style.setProperty('--tg-theme-button-color', tg.themeParams.button_color || '#3390ec');
        document.documentElement.style.setProperty('--tg-theme-button-text-color', tg.themeParams.button_text_color || '#ffffff');
        document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', tg.themeParams.secondary_bg_color || '#f5f5f5');
        document.documentElement.style.setProperty('--tg-theme-section-separator-color', tg.themeParams.section_separator_color || '#e5e5e5');
        
        console.log('Telegram WebApp initialized for user:', currentUserId);
    }
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
function filterProducts() {
    const searchInput = document.getElementById('search-input');
    const clearButton = document.getElementById('clear-search');
    const searchTerm = searchInput.value.toLowerCase();
    const productCards = document.querySelectorAll('.product-card');
    const emptyState = document.getElementById('empty-catalog');
    let visibleProducts = 0;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏
    if (searchTerm.length > 0) {
        clearButton.style.display = 'block';
    } else {
        clearButton.style.display = 'none';
    }
    
    productCards.forEach(card => {
        const productName = card.querySelector('.product-name').textContent.toLowerCase();
        const productSizes = card.querySelector('.product-sizes')?.textContent.toLowerCase() || '';
        const productColors = card.querySelector('.product-colors')?.textContent.toLowerCase() || '';
        const productPrice = card.querySelector('.product-price').textContent.toLowerCase();
        const productArticle = card.querySelector('.product-article')?.textContent.toLowerCase() || '';
        
        // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, —Ü–≤–µ—Ç—É, —Ü–µ–Ω–µ, –∞—Ä—Ç–∏–∫—É–ª—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const productId = card.getAttribute('data-product-id') || '';
        const productCategory = card.getAttribute('data-category') || '';
        
        if (productName.includes(searchTerm) || 
            productSizes.includes(searchTerm) || 
            productColors.includes(searchTerm) ||
            productPrice.includes(searchTerm) ||
            productArticle.includes(searchTerm) ||
            productId.includes(searchTerm) ||
            productCategory.includes(searchTerm)) {
            card.style.display = 'block';
            visibleProducts++;
        } else {
            card.style.display = 'none';
        }
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
    if (visibleProducts === 0 && searchTerm.length > 0) {
        emptyState.style.display = 'block';
    } else {
        emptyState.style.display = 'none';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    updateProductCounter(visibleProducts);
}

// –û—á–∏—Å—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
function clearSearch() {
    const searchInput = document.getElementById('search-input');
    const clearButton = document.getElementById('clear-search');
    
    searchInput.value = '';
    clearButton.style.display = 'none';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    const productCards = document.querySelectorAll('.product-card');
    productCards.forEach(card => {
        card.style.display = 'block';
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
    const emptyState = document.getElementById('empty-catalog');
    if (emptyState) {
        emptyState.style.display = 'none';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
    updateProductCounter(productCards.length);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
function updateProductCounter(count) {
    const sectionTitle = document.querySelector('.section-title');
    if (sectionTitle) {
        const searchInput = document.getElementById('search-input');
        const searchTerm = searchInput.value.trim();
        
        if (searchTerm.length > 0) {
            sectionTitle.textContent = `üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ "${searchTerm}"`;
        } else {
            sectionTitle.textContent = 'üõí –í—Å–µ —Ç–æ–≤–∞—Ä—ã';
        }
    }
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function filterByCategory(category) {
    console.log('–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category);
    
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    document.querySelectorAll('.category-chip').forEach(btn => {
        btn.classList.remove('active');
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    event.target.classList.add('active');
    
    const productsGrid = document.getElementById('products-grid');
    const productCards = productsGrid.querySelectorAll('.product-card');
    
    console.log('–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', productCards.length);
    
    let visibleCount = 0;
    
    productCards.forEach(card => {
        const productCategory = card.getAttribute('data-category');
        console.log('–¢–æ–≤–∞—Ä:', card.querySelector('.product-name')?.textContent, '–ö–∞—Ç–µ–≥–æ—Ä–∏—è:', productCategory);
        
        if (category === 'all' || productCategory === category) {
            card.style.display = 'block';
            visibleCount++;
        } else {
            card.style.display = 'none';
        }
    });
    
    console.log(`–ü–æ–∫–∞–∑–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}": ${visibleCount}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const sectionTitle = document.querySelector('.section-title');
    if (sectionTitle) {
        if (category === 'all') {
            sectionTitle.textContent = 'üõí –í—Å–µ —Ç–æ–≤–∞—Ä—ã';
        } else {
            sectionTitle.textContent = category;
        }
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
function viewProduct(productId) {
    if (window.Telegram && window.Telegram.WebApp) {
        // –í Telegram WebApp –º–æ–∂–µ–º –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.href = `/product/${productId}`;
    } else {
        // –í –±—Ä–∞—É–∑–µ—Ä–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
        window.open(`/product/${productId}`, '_blank');
    }
}

// –í—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
function selectSize(productId, size, price) {
    console.log('–í—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞:', { productId, size, price });
    
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    const sizeButtons = document.querySelectorAll(`[onclick*="selectSize('${productId}'"]`);
    sizeButtons.forEach(btn => btn.classList.remove('selected'));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–∞–∑–º–µ—Ä—É
    event.target.classList.add('selected');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤ localStorage
    localStorage.setItem(`selected_size_${productId}`, size);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
    const addToCartBtn = event.target.closest('.product-card').querySelector('.add-to-cart-btn');
    addToCartBtn.onclick = () => addToCart(productId, size, price);
    addToCartBtn.textContent = `–î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä ${size}`;
    
    console.log(`–†–∞–∑–º–µ—Ä ${size} –≤—ã–±—Ä–∞–Ω –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${productId}`);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId, size = null, price = null) {
    console.log('addToCart –≤—ã–∑–≤–∞–Ω–∞ —Å:', { productId, size, price });
    
    // –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º 'default' –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —Ä–∞–∑–º–µ—Ä–æ–≤
    if (!size) {
        size = 'default';
        console.log('–†–∞–∑–º–µ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º default');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
    const productCard = event.target.closest('.product-card');
    if (!productCard) {
        console.error('–ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç .product-card');
        return;
    }
    
    const productName = productCard.querySelector('.product-name')?.textContent || '–¢–æ–≤–∞—Ä';
    
    if (!price) {
        const priceElement = productCard.querySelector('.product-price');
        if (priceElement) {
            price = parseFloat(priceElement.textContent.replace('‚ÇΩ', '').replace(/\s/g, ''));
        }
    }
    
    if (!price) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞');
        return;
    }
    
    const user_id = window.currentUserId || 'demo_user';
    
    console.log('–î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω—É:', { productId, size, price, productName, user_id });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
    const cartItem = {
        product_id: `${productId}_${size}`,
        name: `${productName} (—Ä–∞–∑–º–µ—Ä ${size})`,
        price: price,
        quantity: 1,
        size: size
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ localStorage
    let localCart = JSON.parse(localStorage.getItem('localCart') || '[]');
    const existingItemIndex = localCart.findIndex(item => item.product_id === cartItem.product_id);
    
    if (existingItemIndex >= 0) {
        localCart[existingItemIndex].quantity += 1;
        console.log('–û–±–Ω–æ–≤–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω–µ');
    } else {
        localCart.push(cartItem);
        console.log('–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É');
    }
    
    localStorage.setItem('localCart', JSON.stringify(localCart));
    console.log('–õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', localCart);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã
    updateCartCount();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    fetch('/api/add-to-cart', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            user_id: user_id,
            product_id: productId,
            size: size,
            quantity: 1
        })
    })
    .then(response => {
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status);
        return response.json();
    })
    .then(data => {
        console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', data);
        if (data.success) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            showNotification('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!', 'success');
            
            // –í–∏–±—Ä–∞—Ü–∏—è –≤ Telegram
            if (window.Telegram && window.Telegram.WebApp) {
                window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
            }
        } else {
            showNotification('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: ' + data.message, 'error');
        }
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:', error);
        showNotification('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
async function updateCartCount() {
    try {
        // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
        try {
            const response = await fetch(`/api/cart/${window.currentUserId || 'demo_user'}`);
            const data = await response.json();
            
            if (data.cart_items && data.cart_items.length > 0) {
                // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É –¥–∞–Ω–Ω—ã–º–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
                window.localCart = data.cart_items;
                
                // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
                const count = window.localCart.reduce((total, item) => total + item.quantity, 0);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
                const cartCountElements = document.querySelectorAll('#cart-count, #floating-cart-count');
                cartCountElements.forEach(element => {
                    element.textContent = count;
                });
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É –≤—Å–µ–≥–¥–∞
                const floatingCart = document.querySelector('.floating-cart');
                if (floatingCart) {
                    floatingCart.style.display = 'flex';
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
                if (window.Telegram && window.Telegram.WebApp && count > 0) {
                    const tg = window.Telegram.WebApp;
                    tg.MainButton.text = `–ö–æ—Ä–∑–∏–Ω–∞ (${count})`;
                    if (!tg.MainButton.isVisible) {
                        tg.MainButton.show();
                    }
                }
                
                console.log('–°—á–µ—Ç—á–∏–∫ –∫–æ—Ä–∑–∏–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω:', count);
            } else {
                // –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
                const cartCountElements = document.querySelectorAll('#cart-count, #floating-cart-count');
                cartCountElements.forEach(element => {
                    element.textContent = '0';
                });
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É –≤—Å–µ–≥–¥–∞
                const floatingCart = document.querySelector('.floating-cart');
                if (floatingCart) {
                    floatingCart.style.display = 'flex';
                }
                
                // –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É Telegram
                if (window.Telegram && window.Telegram.WebApp) {
                    const tg = window.Telegram.WebApp;
                    if (tg.MainButton.isVisible) {
                        tg.MainButton.hide();
                    }
                }
                
                console.log('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
            }
        } catch (serverError) {
            console.warn('Server sync failed:', serverError);
            // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
            let count = 0;
            if (window.localCart) {
                count = window.localCart.reduce((total, item) => total + item.quantity, 0);
            }
            
            const cartCountElements = document.querySelectorAll('#cart-count, #floating-cart-count');
            cartCountElements.forEach(element => {
                element.textContent = count;
            });
        }
        
    } catch (error) {
        console.error('Error updating cart count:', error);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ—Ä–∑–∏–Ω—ã
function initLocalCart() {
    if (!window.localCart) {
        window.localCart = [];
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function openCart() {
    if (window.Telegram && window.Telegram.WebApp) {
        window.location.href = '/cart';
    } else {
        // –í –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.getElementById('cart-modal');
        if (modal) {
            modal.style.display = 'block';
            loadCartContent();
        }
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function closeCart() {
    const modal = document.getElementById('cart-modal');
    if (modal) {
        modal.style.display = 'none';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
async function loadCartContent() {
    try {
        const cartContent = document.getElementById('cart-content');
        if (!cartContent) return;
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
        const cartItems = window.localCart || [];
        
        if (cartItems.length === 0) {
            cartContent.innerHTML = `
                <div class="empty-cart">
                    <div class="empty-cart-icon">üõí</div>
                    <h2>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
                    <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞</p>
                </div>
            `;
        } else {
            let html = '<div class="cart-items">';
            let total = 0;
            
            cartItems.forEach(item => {
                const itemTotal = item.price * item.quantity;
                total += itemTotal;
                
                html += `
                    <div class="cart-item" data-product-id="${item.product_id}">
                        <div class="cart-item-image">
                            ${item.image ? `<img src="${item.image}" alt="${item.name}" class="cart-item-img">` : '<div class="cart-item-placeholder">üì∑</div>'}
                        </div>
                        <div class="cart-item-info">
                            <h3 class="cart-item-name">${item.name}</h3>
                            <div class="cart-item-details">
                                <span class="cart-item-size">–†–∞–∑–º–µ—Ä: ${item.size || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                                <span class="cart-item-price">${item.price.toLocaleString()} ‚ÇΩ</span>
                            </div>
                            <div class="cart-item-quantity">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${item.quantity} —à—Ç</div>
                        </div>
                        <div class="cart-item-controls">
                            <div class="cart-item-total">${itemTotal.toLocaleString()} ‚ÇΩ</div>
                            <button class="remove-btn" onclick="removeFromCart('${item.product_id}')">
                                üóëÔ∏è
                            </button>
                        </div>
                    </div>
                `;
            });
            
            html += '</div>';
            html += `
                <div class="cart-summary">
                    <div class="summary-row total">
                        <span>–ò—Ç–æ–≥–æ:</span>
                        <span>${total.toLocaleString()} ‚ÇΩ</span>
                    </div>
                </div>
                <div class="cart-actions">
                    <button class="clear-cart-btn" onclick="clearCart()">
                        üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
                    </button>
                    <button class="checkout-btn" onclick="goToCheckout()">
                        üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                    </button>
                </div>
            `;
            
            cartContent.innerHTML = html;
        }
        
        // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º –≤ —Ñ–æ–Ω–µ
        try {
            const response = await fetch(`/api/cart/${currentUserId}`);
            const data = await response.json();
            if (data.cart_items && data.cart_items.length > 0) {
                window.localCart = data.cart_items;
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã
                loadCartContent();
            }
        } catch (serverError) {
            console.warn('Server sync failed:', serverError);
        }
        
    } catch (error) {
        console.error('Error loading cart:', error);
    }
}



// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function removeFromCart(productId) {
    if (!window.localCart) return;
    
    window.localCart = window.localCart.filter(item => item.product_id !== productId);
    updateCartCount();
    loadCartContent();
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function clearCart() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É?')) {
        window.localCart = [];
        updateCartCount();
        loadCartContent();
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞
function goToCheckout() {
    closeCart();
    window.location.href = '/cart';
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message, type = 'info') {
    if (window.Telegram && window.Telegram.WebApp) {
        if (type === 'success') {
            window.Telegram.WebApp.showAlert(message);
        } else if (type === 'error') {
            window.Telegram.WebApp.showAlert(message);
        } else {
            window.Telegram.WebApp.showAlert(message);
        }
    } else {
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
        const notification = document.createElement('div');
        notification.className = 'notification';
        notification.textContent = message;
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--tg-theme-button-color, #3390ec);
            color: var(--tg-theme-button-text-color, #ffffff);
            padding: 12px 16px;
            border-radius: 8px;
            z-index: 3000;
            font-size: 14px;
            max-width: 300px;
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 3000);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
function showLoading(show) {
    // –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    let loader = document.querySelector('.loader');
    
    if (show) {
        if (!loader) {
            loader = document.createElement('div');
            loader.className = 'loader';
            loader.innerHTML = '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...';
            loader.style.cssText = `
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background: var(--tg-theme-secondary-bg-color, #f5f5f5);
                padding: 20px;
                border-radius: 12px;
                z-index: 3000;
                font-size: 16px;
            `;
            document.body.appendChild(loader);
        }
    } else {
        if (loader) {
            loader.remove();
        }
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
window.addEventListener('click', function(event) {
    const modal = document.getElementById('cart-modal');
    if (event.target === modal) {
        closeCart();
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏
window.addEventListener('error', function(event) {
    console.error('JavaScript error:', event.error);
});

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫–∏ –≤ Telegram
document.addEventListener('click', function(event) {
    if (window.Telegram && window.Telegram.WebApp) {
        // –ü–æ–∑–≤–æ–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫
        const target = event.target.closest('a');
        if (target && target.href && target.href.startsWith(window.location.origin)) {
            // –û—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
            return;
        }
    }
});
